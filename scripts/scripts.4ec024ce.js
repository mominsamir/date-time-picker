"use strict";function MainCtrl(a,b,c,d,e,f){function g(a){var e=c.debounce(function(){b(a).toggle().then(function(){d.debug("toggle "+a+" is done")})},300);return e}var h=this;h.minDate=moment().subtract(1,"M").format("MM-DD-YYYY"),h.maxDate=moment().add(1,"M").format("MM-DD-YYYY"),console.log(h.minDate),h.hours=[1,2,3,4,5,6,7,8,9,10,11,12],h.currentDate=moment(),h.showCalander=function(a){f(h.currentDate,{targetEvent:a}).then(function(a){h.currentDate=a})},h.logout=function(a){var b=$mdDialog.confirm().title("Logout").content("Save all your work before logout").ariaLabel("Logout").targetEvent(a).ok("Logout").fullscreen(!0).cancel("Cancel");$mdDialog.show(b).then(function(){Auth.logout()},function(){})},h.toggleLeft=g("left")}function LeftCtrl(a,b,c,d){var e=this;e.close=function(){b("left").close().then(function(){})}}angular.module("dateTimePicker",["ngAnimate","ui.router","ngMaterial"]).config(["$stateProvider","$urlRouterProvider","$mdThemingProvider","pickerProvider",function(a,b,c,d){d.setDayHeader("single"),b.otherwise("/home"),a.state("home",{url:"/home",templateUrl:"views/home.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Dashboard"}}).state("date-time-picker",{url:"/date-time-picker-demo",templateUrl:"views/date-time-picker-demo.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Date Time Picker Demo"}}).state("date-time-picker-api",{url:"/date-time-picker-api",templateUrl:"views/date-time-picker-api.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Date Time Picker API"}}).state("range-picker-demo",{url:"/range-picker-demo",templateUrl:"views/range-picker-demo.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Range Picker Demo"}}).state("range-picker-api",{url:"/range-picker-api",templateUrl:"views/range-picker-api.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Range Picker API"}}).state("timepicker",{url:"/timepicker",templateUrl:"views/timepicker.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Range Picker API"}}).state("time-picker-demo",{url:"/time-picker-demo",templateUrl:"views/time-picker-demo.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Range Picker API"}}).state("time-picker-api",{url:"/time-picker-api",templateUrl:"views/time-picker-api.html",controller:"MainCtrl",controllerAs:"vm",data:{title:"Range Picker API"}}),c.theme("default").primaryPalette("teal")}]),angular.module("dateTimePicker").controller("MainCtrl",["$timeout","$mdSidenav","$mdUtil","$log","$state","$smDateTimePicker",MainCtrl]).controller("LeftCtrl",["$timeout","$mdSidenav","$mdUtil","$log",LeftCtrl]),function(){function a(a,b,c,d,e,f){function g(a){return f.isSectionSelected(a)}function h(a){f.toggleSelectSection(a)}function i(a){var b=!1,c=f.openedSection;return c===a?b=!0:a.children&&a.children.forEach(function(a){a===c&&(b=!0)}),b}function j(c){b.go(c),e("left").close().then(function(){a.debug("close RIGHT is done ssss")})}var k=this;k.isOpen=g,k.toggleOpen=h,k.isSectionSelected=i,k.autoFocusContent=!1,k.goToState=j,k.menu=f,k.status={isFirstOpen:!0,isFirstDisabled:!1}}angular.module("dateTimePicker").controller("MenuCtrl",["$log","$state","$timeout","$location","$mdSidenav","menu",a])}(),function(){angular.module("dateTimePicker").run(["$templateCache",function(a){a.put("partials/menu-link.tmpl.html",'<md-button  \n ng-click="focusSection(section)">\n  <md-icon ng-if="section.icon" md-font-icon="material-icons">{{section.icon}}</md-icon>  {{section | humanizeDoc}}\n</md-button>')}]).directive("menuLink",function(){return{scope:{section:"="},templateUrl:"partials/menu-link.tmpl.html",link:function(a,b){var c=b.parent().controller();a.focusSection=function(a){c.autoFocusContent=!0,c.goToState(a.state)}}}})}(),function(){angular.module("dateTimePicker").factory("menu",["$location",function(a){var b=[{name:"Home",state:"home",type:"link",icon:"home"}];b.push({name:"Date Picker",type:"toggle",iconp:"date_range",pages:[{name:"Demo",type:"link",state:"date-time-picker"},{name:"API",type:"link",state:"date-time-picker-api"}]}),b.push({name:"Time Picker",type:"toggle",iconp:"watch_later",pages:[{name:"Demo",type:"link",state:"time-picker-demo"},{name:"API",type:"link",state:"time-picker-api"}]}),b.push({name:"Range Picker",type:"toggle",iconp:"timeline",pages:[{name:"Demo",type:"link",state:"range-picker-demo"},{name:"API",type:"link",state:"range-picker-api"}]});var c;return c={sections:b,toggleSelectSection:function(a){c.openedSection=c.openedSection===a?null:a},isSectionSelected:function(a){return c.openedSection===a},selectPage:function(b,d){d&&d.url&&a.path(d.url),c.currentSection=b,c.currentPage=d}}}]).filter("nospace",function(){return function(a){return a?a.replace(/ /g,""):""}}).filter("humanizeDoc",function(){return function(a){return a?"directive"===a.type?a.name.replace(/([A-Z])/g,function(a){return"-"+a.toLowerCase()}):a.label||a.name:void 0}})}(),function(){angular.module("dateTimePicker").run(["$templateCache",function(a){a.put("partials/menu-toggle.tmpl.html",'<md-button class="md-button-toggle"\n  ng-click="toggle()"\n  aria-controls="side-menu-{{section.name | nospace}}"\n  flex layout="row"\n  aria-expanded="{{isOpen()}}">\n  <md-icon md-font-icon="material-icons">{{section.iconp}}</md-icon> {{section.name}}\n  <span aria-hidden="true" class="pull-right material-icons md-toggle-icon"\n  ng-class="{\'toggled\' : isOpen()}">keyboard_arrow_down</span>\n</md-button>\n<ul ng-show="isOpen()" id="side-menu-{{section.name | nospace}}" class="menu-toggle-list">\n  <li ng-repeat="page in section.pages">\n    <menu-link section="page"></menu-link>\n  </li>\n</ul>\n')}]).directive("menuToggle",["$timeout",function(a){return{scope:{section:"="},templateUrl:"partials/menu-toggle.tmpl.html",link:function(a,b){var c=b.parent().controller();a.isOpen=function(){return c.isOpen(a.section)},a.toggle=function(){c.toggleOpen(a.section)}}}}])}(),function(){function a(a,b,c,d){return{restrict:"EA",replace:!0,scope:{value:"=",fname:"@",lable:"@",isRequired:"@",disable:"=",form:"=",format:"@",divider:"@"},template:' <md-input-container>    <label for="{{fname}}">{{lable}}</label>      <input name="{{fname}}" ng-model="value" ng-readonly="true"             type="text" placeholde="{{lable}}"             aria-label="{{fname}}" ng-required="{{isRequired}}" class="sm-input-container"             ng-focus="show()">    <sm-range-picker class="sm-calender-pane  md-whiteframe-15dp" ng-model="value" divider="{{divider}}" format="{{format}}" ></sm-range-picker>  </md-input-container>',link:function(d,e,f){function g(a,b){var c=460,d=296,e=a.top;a.top+c>b.bottom&&(e=a.top-(a.top+c-(b.bottom-20)));var f=a.left;return a.left+d>b.right&&(f=a.left-(a.left+d-(b.right-10))),{top:e,left:f}}function h(){k.addClass("hide-animate"),k.removeClass("show"),c.enableScrolling()}var i=e[0].querySelector(".sm-input-container"),j=e[0].querySelector(".sm-calender-pane"),k=angular.element(j);d.format=angular.isUndefined(d.format)?"MM-DD-YYYY":d.format,k.addClass("hide hide-animate"),d.startDate=angular.isUndefined(d.value)?d.startDate:d.value,a.on("click",function(a){j===a.target||i===a.target||j.contains(a.target)||i.contains(a.target)||h()}),angular.element(i).on("keydown",function(a){9===a.which&&h()}),d.show=function(){var a=i.getBoundingClientRect(),d=document.body.getBoundingClientRect();if(k.removeClass("hide"),b("sm")||b("xs"))j.style.left=(d.width-296)/2+"px",j.style.top=(d.height-450)/2+"px";else{var e=g(a,d);j.style.left=e.left+"px",j.style.top=e.top+"px"}document.body.appendChild(j),c.disableScrollAround(j),k.addClass("show")},d.$on("range-picker:close",function(){h()}),d.$on("$destroy",function(){j.parentNode.removeChild(j)})}}}function b(a){return{restrict:"E",require:["ngModel","smRangePicker"],scope:{format:"@",divider:"@"},controller:["$scope","picker",c],controllerAs:"vm",templateUrl:"picker/range-picker.html",link:function(a,b,c,d){var e=d[0],f=d[1];f.configureNgModel(e)}}}var c=function(a,b){var c=this;c.scope=a,c.clickedButton=0,c.format=angular.isUndefined(a.format)?"MM-DD-YYYY":a.format,c.showCustom=!1,c.startDate=moment(),c.endDate=moment(),console.log(b.rangeDivider),c.divider=angular.isUndefined(c.scope.divider)||""===c.scope.divider?b.rangeDivider:a.divider,console.log(c.divider),c.okLabel=b.okLabel,c.cancelLabel=b.cancelLabel,c.rangeDefaultList=b.rangeDefaultList,c.rangeCustomStartEnd=b.rangeCustomStartEnd,c.selectedTabIndex=a.selectedTabIndex,c.scope.$on("calender:date-selected",function(){c.selectedTabIndex=1})};c.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var b=this;a.$render=function(){b.ngModelCtrl.$viewValue=b.startDate+" "+b.divider+" "+b.endDate}},c.prototype.dateRangeSelected=function(){var a=this;a.selectedTabIndex=0,a.showCustom=!1,a.setNgModelValue(a.startDate,a.divider,a.endDate)},c.prototype.preDefineDate=function(a){var b=this;b.clickedButton=a;var c=moment();switch(a){case 1:b.startDate=c.clone().startOf("day"),b.endDate=c.clone().endOf("day");break;case 2:b.startDate=c.clone().subtract(7,"d"),b.endDate=c.clone();break;case 3:b.startDate=c.clone().startOf("month"),b.endDate=c.endOf("month");break;case 4:b.startDate=c.clone().subtract(1,"month").startOf("month"),b.endDate=c.clone().endOf("month");break;case 5:b.startDate=c.clone().startOf("quarter"),b.endDate=c.clone().endOf("quarter");break;case 6:b.startDate=c.clone().startOf("year"),b.endDate=c.clone().endOf("year");break;case 7:b.showCustom=!0,b.selectedTabIndex=0;break;case 8:b.startDate=c.clone().startOf("year"),b.endDate=c.clone()}7!=a&&b.setNgModelValue(b.startDate,b.divider,b.endDate)},c.prototype.setNgModelValue=function(a,b,c){var d=this;d.ngModelCtrl.$setViewValue(a.format(d.scope.format)+" "+b+" "+c.format(d.scope.format)),d.ngModelCtrl.$render(),d.scope.$emit("range-picker:close")},c.prototype.cancel=function(){var a=this;a.scope.$emit("range-picker:close")};var d=angular.module("dateTimePicker");d.directive("smRangePicker",["picker",b]),d.directive("smRangePickerInput",["$document","$mdMedia","$mdUtil","picker",a])}(),function(){function a(a,b){return{restrict:"E",replace:!0,require:["^ngModel","smCalender"],scope:{initialDate:"@",minDate:"=",maxDate:"=",format:"@",mode:"@",startView:"@",weekStartDay:"@"},controller:["$scope","$timeout","picker","$mdMedia",d],controllerAs:"vm",templateUrl:"picker/calender-date.html",link:function(a,b,c,d){var e=d[0],f=d[1];f.configureNgModel(e),a.$on("$destroy",function(){b.remove()})}}}function b(a,b,c,d,e){return{restrict:"E",replace:!0,scope:{value:"=",startDate:"@",weekStartDay:"@",startView:"@",mode:"@",format:"@",minDate:"@",maxDate:"@",fname:"@",lable:"@",isRequired:"@",disable:"=",form:"=",closeOnSelect:"@"},template:'  <md-input-container  >    <label for="{{fname}}">{{lable }}</label>    <input name="{{fname}}" ng-model="value" ng-readonly="true"             type="text" placeholde="{{lable}}"             aria-label="{{fname}}" data-ng-required="isRequired"             ng-focus="show()" server-error class="sm-input-container">    <div ng-messages="form.fname.$error" ng-if="form[fname].$touched">    		<div ng-messages-include="{{ngMassagedTempaltePath}}"></div>    </div>    	<div id="picker" class="sm-calender-pane md-whiteframe-15dp">     		<sm-date-picker               id="{{fname}}Picker"               ng-model="value" 				initial-date="{{value}}"              mode="{{mode}}" 				close-on-select="{{closeOnSelect}}"              start-view="{{startView}}"               data-min-date="minDate"               data-max-date="maxDate"                data-format="{{format}}"            	data-week-start-day="{{weekStartDay}}" > 			</sm-date-picker>    	</div>  </md-input-container>',link:function(d,f,g){function h(a,b){var c=460,d=296,e=a.top;a.top+c>b.bottom&&(e=a.top-(a.top+c-(b.bottom-20)));var f=a.left;return a.left+d>b.right&&(f=a.left-(a.left+d-(b.right-10))),{top:e,left:f}}function i(){l.addClass("hide-animate"),l.removeClass("show"),a.enableScrolling()}var j=f[0].querySelector(".sm-input-container"),k=f[0].querySelector(".sm-calender-pane"),l=angular.element(k);d.ngMassagedTempaltePath=e.path,d.format=angular.isUndefined(d.format)?"MM-DD-YYYY":d.format,l.addClass("hide hide-animate"),d.startDate=angular.isUndefined(d.value)?d.startDate:d.value,c.on("click",function(a){k===a.target||j===a.target||k.contains(a.target)||j.contains(a.target)||i()}),angular.element(j).on("keydown",function(a){9===a.which&&i()}),d.show=function(){var c=j.getBoundingClientRect(),d=document.body.getBoundingClientRect();if(l.removeClass("hide"),b("sm")||b("xs"))k.style.left=(d.width-282)/2+"px",k.style.top=(d.height-450)/2+"px";else{var e=h(c,d);k.style.left=e.left+"px",k.style.top=e.top+"px"}document.body.appendChild(k),a.disableScrollAround(k),l.addClass("show")},d.$on("calender:close",function(){i()})}}}function c(){var a="X",b="Cancel",c="Ok",d=[{single:"S",shortName:"Su",fullName:"Sunday"},{single:"M",shortName:"Mo",fullName:"MonDay"},{single:"T",shortName:"Tu",fullName:"TuesDay"},{single:"W",shortName:"We",fullName:"Wednesday"},{single:"T",shortName:"Th",fullName:"Thursday"},{single:"F",shortName:"Fr",fullName:"Friday"},{single:"S",shortName:"Sa",fullName:"Saturday"}],e="single",f=moment.months(),g="To",h=["Today","Last 7 Days","This Month","Last Month","This Quarter","Year To Date","This Year","Custome Range"],i=["Start Date","End Date"];return{setMassagePath:function(b){a=b},setDivider:function(a){divider=a},setDaysNames:function(a){d=a},setMonthNames:function(a){f=a},setDayHeader:function(a){e=a},setOkLabel:function(a){c=a},setCancelLabel:function(a){b=a},setRangeDefaultList:function(a){h=a},setRangeCustomStartEnd:function(a){i=a},$get:function(){return{massagePath:a,cancelLabel:b,okLabel:c,daysNames:d,monthNames:f,dayHeader:e,rangeDivider:g,rangeCustomStartEnd:i,rangeDefaultList:h}}}}var d=function(a,b,c,d){var e=this;e.$scope=a,e.$timeout=b,e.picker=c,e.dayHeader=e.picker.dayHeader,e.initialDate=a.initialDate,e.viewModeSmall=d("xs"),e.startDay=angular.isUndefined(a.weekStartDay)||""===a.weekStartDay?"Sunday":a.weekStartDay,e.minDate=a.minDate,e.maxDate=a.maxDate,e.mode=angular.isUndefined(a.mode)?"DATE":a.mode,e.format=a.format,e.restrictToMinDate=angular.isUndefined(a.minDate)?!1:!0,e.restrictToMaxDate=angular.isUndefined(a.maxDate)?!1:!0,e.stopScrollPrevious=!1,e.stopScrollNext=!1,e.monthCells=[],e.dateCellHeader=[],e.dateCells=[],e.monthList=c.monthNames,e.moveCalenderAnimation="",e.format=angular.isUndefined(e.format)?"MM-DD-YYYY":e.format,e.initialDate=angular.isUndefined(e.initialDate)?moment():moment(e.initialDate,e.format),e.currentDate=e.initialDate.clone(),e.restrictToMinDate&&(e.minDate=moment(e.minDate,e.format)),e.restrictToMaxDate&&(e.maxDate=moment(e.maxDate,e.format)),e.yearItems={currentIndex_:0,PAGE_SIZE:7,START:1900,getItemAtIndex:function(a){return this.currentIndex_<a&&(this.currentIndex_=a),this.START+a},getLength:function(){return this.currentIndex_+Math.floor(this.PAGE_SIZE/2)}},e.init()};d.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var b=this;a.$render=function(){b.ngModelCtrl.$viewValue=b.currentDate}},d.prototype.setNgModelValue=function(a){var b=this;b.ngModelCtrl.$setViewValue(a),b.ngModelCtrl.$render()},d.prototype.init=function(){var a=this;a.buildDateCells(),a.buildDateCellHeader(),a.buildMonthCells(),a.setView()},d.prototype.setView=function(){var a=this;switch(a.headerDispalyFormat="ddd, MMM DD",a.mode){case"date-time":a.view="DATE",a.headerDispalyFormat="ddd, MMM DD HH:mm";break;case"time":a.view="HOUR",a.headerDispalyFormat="HH:mm";break;default:a.view="DATE"}},d.prototype.showYear=function(){var a=this;a.yearTopIndex=a.initialDate.year()-a.yearItems.START+Math.floor(a.yearItems.PAGE_SIZE/2),a.yearItems.currentIndex_=a.initialDate.year()-a.yearItems.START+1},d.prototype.buildMonthCells=function(){var a=this;a.monthCells=moment.months()},d.prototype.buildDateCells=function(){var a=this,b=a.initialDate.month(),c=a.initialDate.clone().date(0).day(a.startDay),d=!1,e=!1;angular.isUndefined(a.minDate)||(a.stopScrollPrevious=a.minDate.unix()>c.unix()),a.dateCells=[];for(var f=0;6>f;f++){for(var g=[],h=0;7>h;h++){var i=c.month()===b;e=i?!1:!0,!a.restrictToMinDate||angular.isUndefined(a.minDate)||e||(e=a.minDate.isAfter(c)),!a.restrictToMaxDate||angular.isUndefined(a.maxDate)||e||(e=a.maxDate.isBefore(c));var j={date:c.clone(),dayNum:i?c.date():"",month:c.month(),today:c.isSame(moment(),"day")&&c.isSame(moment(),"month"),year:c.year(),dayName:c.format("dddd"),isWeekEnd:d,isDisabledDate:e,isCurrentMonth:i};g.push(j),c.add(1,"d")}a.dateCells.push(g)}a.restrictToMaxDate&&!angular.isUndefined(a.maxDate)&&(a.stopScrollNext=a.maxDate.unix()<c.unix()),a.dateCells[0][6].isDisabledDate&&!a.dateCells[0][6].isCurrentMonth&&a.dateCells[0].splice(0)},d.prototype.changePeriod=function(a){var b=this;if("p"===a){if(b.stopScrollPrevious)return;b.moveCalenderAnimation="slideLeft",b.initialDate.subtract(1,"M")}else{if(b.stopScrollNext)return;b.moveCalenderAnimation="slideRight",b.initialDate.add(1,"M")}b.buildDateCells(),b.$timeout(function(){b.moveCalenderAnimation=""},500)},d.prototype.selectDate=function(a,b){var c=this;b||(c.currentDate=a,c.setNgModelValue(a),c.$scope.$emit("calender:date-selected"))},d.prototype.buildDateCellHeader=function(a){var b=this,c=b.picker.daysNames,d=[];for(var e in c)d.push(e);var f=moment().day(b.startDay).day(),g=0;for(var e in c)b.dateCellHeader.push(c[d[(g+f)%d.length]]),g++},d.prototype.changeView=function(a){var b=this;b.view=a},d.prototype.changeYear=function(a){var b=this;b.initialDate.year(a),b.buildDateCells(),b.view="DATE"},d.prototype.setHour=function(a){var b=this;b.currentDate.hour(a)},d.prototype.setMinute=function(a){var b=this;b.currentDate.minute(a)},d.prototype.selectedDateTime=function(){var a=this;a.setNgModelValue(a.currentDate),"time"===a.mode?a.view="HOUR":a.view="DATE",a.$scope.$emit("calender:close")},d.prototype.closeDateTime=function(){var a=this;"time"===a.mode?a.view="HOUR":a.view="DATE",a.$scope.$emit("calender:close")};var e=angular.module("dateTimePicker");e.directive("smCalender",["$timeout","picker",a]),e.directive("smDateTimePicker",["$mdUtil","$mdMedia","$document","$timeout","picker",b]),e.provider("picker",[c])}(),function(){function a(){return{restrict:"E",replace:!0,require:["^ngModel","smTime"],scope:{initialTime:"@",format:"@"},controller:["$scope","$timeout",b],controllerAs:"vm",templateUrl:"picker/calender-hour.html",link:function(a,b,c,d){var e=d[0],f=d[1];f.configureNgModel(e),a.$on("$destroy",function(){b.remove()})}}}var b=function(a,b){var c=this;c.$scope=a,c.$timeout=b,c.initialDate=a.initialDate,c.format=a.format,c.hourCells=[],c.minuteCells=[],c.moveCalenderAnimation="",c.format=angular.isUndefined(c.format)?"HH:mm":c.format,c.initialDate=angular.isUndefined(c.initialDate)?moment():moment(c.initialDate,c.format),c.currentDate=c.initialDate.clone(),c.init(),c.show=!0};b.prototype.configureNgModel=function(a){this.ngModelCtrl=a;var b=this;a.$render=function(){b.ngModelCtrl.$viewValue=b.currentDate}},b.prototype.setNgModelValue=function(a){var b=this;b.ngModelCtrl.$setViewValue(a),b.ngModelCtrl.$render()},b.prototype.init=function(){var a=this;a.buidHourCells(),a.buidMinuteCells(),a.headerDispalyFormat="HH:mm"},b.prototype.buidHourCells=function(){for(var a=this,b=0;23>=b;b++){var c={hour:b,isCurrent:a.initialDate.hour()===b};a.hourCells.push(c)}},b.prototype.buidMinuteCells=function(){for(var a=this,b=0;59>=b;b++){var c={minute:b,isCurrent:a.initialDate.minute()===b};a.minuteCells.push(c)}},b.prototype.selectDate=function(a,b){var c=this;b||(c.currentDate=a,c.$scope.$emit("calender:date-selected"))},b.prototype.setHour=function(a){var b=this;b.currentDate.hour(a),b.setNgModelValue(b.currentDate.format(b.format))},b.prototype.setMinute=function(a){var b=this;b.currentDate.minute(a),b.setNgModelValue(b.currentDate.format(b.format))},b.prototype.selectedDateTime=function(){var a=this;a.setNgModelValue(a.currentDate.format(a.format)),"time"===a.mode?a.view="HOUR":a.view="DATE",a.$scope.$emit("calender:close")};var c=angular.module("dateTimePicker");c.directive("smTime",["$timeout",a])}(),function(){function a(a,b,c){return{restrict:"E",require:"^ngModel",replace:!0,scope:{initialDate:"@",minDate:"=",maxDate:"=",format:"@",mode:"@",startDay:"@",closeOnSelect:"@",weekStartDay:"@"},templateUrl:"picker/date-picker.html",link:function(a,d,e,f){function g(b){switch(b){case"date-time":a.view="DATE",a.headerDispalyFormat="ddd, MMM DD HH:mm";break;case"time":a.view="HOUR",a.headerDispalyFormat="HH:mm";break;default:a.view="DATE"}}g(a.mode),a.okLabel=b.okLabel,a.cancelLabel=b.cancelLabel,a.viewModeSmall=c("xs"),a.currentDate=isNaN(f.$viewValue)?moment():f.$viewValue,a.$on("calender:date-selected",function(){if(a.closeOnSelect&&("date-time"!==a.mode||"time"!==a.mode)){var b=moment(a.selectedDate,a.format);if(b.isValid()||(b=moment(),a.selectedDate=b),!angular.isUndefined(a.selectedTime)){var c=a.selectedTime.split(":");b.hour(c[0]).minute(c[1])}a.currentDate=a.selectedDate,f.$setViewValue(b.format(a.format)),f.$render(),g(a.mode),a.$emit("calender:close")}}),a.selectedDateTime=function(){var b=moment(a.selectedDate,a.format);if(b.isValid()||(b=moment(),a.selectedDate=b),!angular.isUndefined(a.selectedTime)){var c=a.selectedTime.split(":");b.hour(c[0]).minute(c[1])}a.currentDate=a.selectedDate,f.$setViewValue(b.format(a.format)),f.$render(),g(a.mode),a.$emit("calender:close")},a.closeDateTime=function(){a.$emit("calender:close")}}}}function b(a,b){return{restrict:"E",require:"^ngModel",replace:!0,scope:{initialDate:"@",format:"@",mode:"@",startDay:"@",closeOnSelect:"@"},templateUrl:"picker/date-picker.html",link:function(a,c,d,e){function f(b){switch(b){case"date-time":a.view="DATE",a.headerDispalyFormat="ddd, MMM DD HH:mm";break;case"time":a.view="HOUR",a.headerDispalyFormat="HH:mm";break;default:a.view="DATE"}}f(a.mode),a.okLabel=b.okLabel,a.cancelLabel=b.cancelLabel,a.currentDate=isNaN(e.$viewValue)?moment():e.$viewValue,a.$on("calender:date-selected",function(){if(a.closeOnSelect&&("date-time"!==a.mode||"time"!==a.mode)){var b=moment(a.selectedDate,a.format);if(b.isValid()||(b=moment(),a.selectedDate=b),!angular.isUndefined(a.selectedTime)){var c=a.selectedTime.split(":");b.hour(c[0]).minute(c[1])}a.currentDate=a.selectedDate,e.$setViewValue(b.format(a.format)),e.$render(),f(a.mode),a.$emit("calender:close")}}),a.selectedDateTime=function(){var b=moment(a.selectedDate,a.format);if(b.isValid()||(b=moment(),a.selectedDate=b),!angular.isUndefined(a.selectedTime)){var c=a.selectedTime.split(":");b.hour(c[0]).minute(c[1])}a.currentDate=a.selectedDate,e.$setViewValue(b.format(a.format)),e.$render(),f(a.mode),a.$emit("calender:close")},a.closeDateTime=function(){a.$emit("calender:close")}}}}var c=angular.module("dateTimePicker");c.directive("smDatePicker",["$timeout","picker","$mdMedia",a]),c.directive("smTimePickern",["$timeout","picker",b])}(),function(){function a(a){return{restrict:"E",replace:!0,scope:{initialDate:"@",minDate:"=",maxDate:"=",format:"@",mode:"@",startDay:"@",closeOnSelect:"@"},template:'<div class="sm-clock">     <div class="sm-clock-container" >         <md-button class="md-button md-icon-button hour-number hour-number{{$index}}"           ng-repeat="h in numbers"            ng-class="{\'md-primary\': h.isCurrent,\'md-primary md-raised\': selectedHour===h.h || selectedMinute===h.h} "           ng-click="selectTime($event,$index,h.h)">           {{h.h}}         </md-button>     <md-toolbar class="sm-clock-center md-primary"></md-toolbar>     <md-toolbar class="sm-clock-hand md-primary"></md-toolbar>     </div></div>',link:function(b,c,d,e){function f(){for(var a=0;12>=a;a++){var b="sm-clock-hand-"+a;j.removeClass(b)}}var g=moment();b.selectedHour=g.hour(),b.hourNumber=[],b.minuteNumber=[],b.view="HOUR";var h=function(){for(var a=1;12>=a;a++){var c={h:a,isCurrent:(moment().hour()>12?moment().hour()-12:moment().hour())===a,m:moment()};b.hourNumber.push(c)}},i=function(){for(var a=0;60>a;){var c={h:a,isCurrent:moment().minute()===a,m:moment()};b.minuteNumber.push(c),a+=5}};h(),i();var j=angular.element(document.querySelector(".sm-clock-hand"));b.numbers=b.hourNumber,b.selectTime=function(a,c,d){"HOUR"===b.view?(b.selectedHour=d,f(),j.addClass("sm-clock-hand-"+c),b.swichTo("MINUTE")):(b.selectedMinute=d,f(),j.addClass("sm-clock-hand-"+c),b.swichTo("HOUR")),console.log(b.selectedHour,b.selectedMinute)},b.resetToDefaultClockHand=function(){j.addClass("sm-clock-hand-11")},b.swichTo=function(c){switch(c){case"HOUR":a(function(){b.numbers=b.hourNumber,b.view="HOUR"},1e3);break;case"MINUTE":a(function(){b.numbers=b.minuteNumber,b.view="MINUTE"},10)}}}}}var b=angular.module("dateTimePicker");b.directive("smTimePicker",["$timeout",a])}(),function(){function a(a,b,c,d,e){var f=this;f.view="DATE",f.currentDate=e}var b=angular.module("dateTimePicker");b.provider("$smDateTimePicker",function(){var b="OK",c="Cancel",d="ddd, MMM DD";this.setDisplayFormat=function(a){d=a},this.setOKButtonLabel=function(a){b=a},this.setCancelButtonLabel=function(a){c=a},this.$get=["$mdDialog",function(b){var c=function(c,e){return angular.isUndefined(c)||(c=moment()),angular.isObject(e)||(e={}),e.displayFormat=d,b.show({controller:["$scope","$mdDialog","$mdMedia","$timeout","initialDate",a],controllerAs:"vm",clickOutsideToClose:!0,targetEvent:e.targetEvent,templateUrl:"picker/date-picker-service.html",locals:{initialDate:c,options:e},skipHide:!0})};return c}]})}(),angular.module("dateTimePicker").run(["$templateCache",function(a){a.put("views/date-time-picker-api.html",'<md-content class="md-whiteframe-z2" layout-padding> <div> Attributes Details </div> <div> <table> <thead> <tr> <th>Attribute</th> <th>Value</th> <th>Desription</th> </tr> </thead> <tbody> <tr> <td>fname</td> <td>Field name</td> <td>Field Name</td> </tr> <tr> <td>lable</td> <td>Lable for field</td> <td>Lable for field</td> </tr> <tr> <td>form</td> <td>form control name</td> <td>form control name</td> </tr> <tr> <td>value</td> <td>ng-Model</td> <td>ng-Model value here</td> </tr> <tr> <td>flex-size</td> <td>Flex size to setup</td> <td>Flex size to setup</td> </tr> <tr> <td>format</td> <td>date format</td> <td>Moment Js accepted date format</td> </tr> <tr> <td>mode</td> <td>Date picker or Date Time picker mode</td> <td>if DateTime Mode put \'date-time\' else keep blank</td> </tr> <tr> <td>week-start-day</td> <td>Start day for calender</td> <td>Monday or Sunday</td> </tr> <tr> <td>start-date</td> <td>Start date for calender</td> <td>Keep Blank</td> </tr> <tr> <td>is-required</td> <td>is field is required</td> <td>True or false</td> </tr> <tr> <td>min-date</td> <td>Min Date </td> <td>Min date</td> </tr> <tr> <td>max-date</td> <td>Max date</td> <td>Max Date</td> </tr> </tbody> </table> </div> <div> Support Swipe left and right for date movement. </div> <div> <code> <p> &lt;sm-date-time-picker &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fname="Date of Joining" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lable="joiningDate" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form="empForm"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value="vm.employee.joiningDate"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;start-date="10-15-2015" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flex="100" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;min-date="01-12-2015" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;max-date="01-12-2016" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is-required="{{true}}"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format="MM-DD-YYYY"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;week-start-day="Sunday"&gt; &lt;/sm-date-time-picker&gt;  </p> </code> </div> <div> Need your feedback. </div> </md-content>'),a.put("views/date-time-picker-demo.html",'<form name="empForm"> <md-content class="md-whiteframe-z2" layout-padding> <div layout="row"> DateTime picker, week start date is Monday </div> <div layout="row"> DateTime picker, week start date is Monday </div> <div layout="row"> <sm-date-time-picker fname="field" lable="Date of Birth" form="empForm" value="vm.employee.dateOfBirth" flex="50" flex-sm="100" flex-xs="100" is-required="{{true}}" format="MM-DD-YYYY HH:mm" mode="date-time" week-start-day="Monday"> </sm-date-time-picker> </div> <div layout="row"> Date picker, Close on date select only works with &nbsp;<b> Date Picker </b>&nbsp; mode with attribute &nbsp;<b> close-on-select="true"</b> </div> <div layout="row"> <sm-date-time-picker fname="exitDate" lable="Date of Exit" form="empForm" value="vm.employee.exitDate" flex="50" flex-sm="100" flex-xs="100" close-on-select="true" is-required="{{true}}" format="MM-DD-YYYY" week-start-day="Monday"> </sm-date-time-picker> </div> <div layout="row"> Min date set to {{vm.minDate}} </div> <div layout="row"> <sm-date-time-picker fname="Date of Pay" lable="Date of Pay" form="empForm" min-date="{{vm.minDate}}" value="vm.employee.dateOfPay" flex="50" is-required="{{true}}" format="MM-DD-YYYY HH:mm" mode="date-time" week-start-day="Sunday"> </sm-date-time-picker> </div> <div layout="row"> Date picker, Max date set to {{vm.maxDate}} and week start date is Sunday </div> <div layout="row"> <sm-date-time-picker fname="joiningDate" lable="Date of Joining" form="empForm" value="vm.employee.joiningDate" data-start-date="10-15-2015" flex="50" flex-sm="100" flex-xs="100" max-date="{{vm.maxDate}}" is-required="{{true}}" format="MM-DD-YYYY" week-start-day="Sunday"> </sm-date-time-picker> </div> <!--     <div layout="row">\r\n    {{vm.currentDate}}\r\n        <md-button class="md-button md-raised " ng-click="vm.showCalander($event)">show Calander</md-button>\r\n    </div> --> </md-content> </form>'),a.put("views/home.html","<md-content class=\"md-whiteframe-z2\" layout-padding> <div layout=\"row\"> <h2 class=\"md-headline\">Wel Come to Date Time Picker</h2> </div> <div layout=\"column\"> <p style=\"font-size:16px\"> smPicker allows you to pick date and time and Range . </p> </div> <div layout=\"column\"> <h2 class=\"md-headline\">How to Install</h2> <code><p>bower install --save smDateTimeRangePicker</p></code> </div> <div layout=\"column\"> <h2 class=\"md-headline\">How to Use</h2> <code><p>angular.module('Your App',[\"ngMaterial\",\"smDateTimeRangePicker\"]);</p></code> </div> <div layout=\"column\"> <h2 class=\"md-headline\">How to configure</h2> <code> <p>angular.module('Your App',[\"ngMaterial\",\"smDateTimeRangePicker\"]); &nbsp;&nbsp;&nbsp;.config(function ($mdThemingProvider,pickerProvider) {  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pickerProvider.setOkLabel('Save'); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pickerProvider.setCancelLabel('Close'); </p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Over ride day names by changing here <p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;pickerProvider.setDayHeader('single'); //Options 'single','shortName', 'fullName' &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker.setDaysNames([ &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'S','shortName':'Su','fullName':'Sunday'}, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'M','shortName':'Mo','fullName':'MonDay'}, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'T','shortName':'Tu','fullName':'TuesDay'}, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'W','shortName':'We','fullName':'Wednesday'}, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'T','shortName':'Th','fullName':'Thursday'}, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'F','shortName':'Fr','fullName':'Friday'}, &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{'single':'S','shortName':'Sa','fullName':'Saturday'} &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;]); </p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Range Picker Configuration <p> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker.setDivider('To'); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker.setMonthNames([\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker.setRangeDefaultList(['Today', 'Last 7 Days', 'This Month', 'Last Month', 'This Quarter', 'Year To Date', 'This Year', 'Custome Range']); &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;picker.setRangeCustomStartEnd(['Start Date', 'End Date']); &nbsp;&nbsp;&nbsp;} </p> </code> </div> </md-content>"),
a.put("views/massages.html",'<div ng-message="invalid">User Id or Password is incorrect</div> <div ng-message="required">Required.</div> <div ng-message="minlength">Min Lenght should be {{minlength}}</div> <div ng-message="maxlength">Max lenght should be {{maxlength}}</div> <div ng-message="email">Email is not valid</div> <div ng-message="Unique">item with this already exists</div> <div ng-message="SSN">SSN number is not valid</div> <div ng-message="Phone">Phone number is not valid</div>'),a.put("views/range-picker-api.html",'<md-content class="md-whiteframe-z2" layout-padding> <div> Attributes Details </div> <div> <table> <thead> <tr> <th>Attribute</th> <th>Value</th> <th>Desription</th> </tr> </thead> <tbody> <tr> <td>fname</td> <td>Field name</td> <td>Field Name</td> </tr> <tr> <td>lable</td> <td>Lable for field</td> <td>Lable for field</td> </tr> <tr> <td>form</td> <td>form control name</td> <td>form control name</td> </tr> <tr> <td>value</td> <td>ng-Model</td> <td>ng-Model value here</td> </tr> <tr> <td>format</td> <td>date format</td> <td>Moment Js accepted date format</td> </tr> <tr> <td>divider</td> <td>Divider between two dates</td> <td>Defalt value is \'To\' </td> </tr> <tr> <td>is-required</td> <td>is field is required</td> <td>True or false</td> </tr> </tbody> </table> </div> <div> Support Swipe left and right for date movement. </div> <div> <code> <p> &lt;sm-range-picker-input &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fname="joiningDate" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lable="Date of Joining" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form="empForm"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value="vm.employee.joiningDate"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flex-size="100" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is-required="{{true}}"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format="MM-DD-YYYY"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;divider="To"&gt; &lt;/sm-range-picker-input&gt; </p> </code> </div> <div> Need your feedback. </div> </md-content>'),a.put("views/range-picker-demo.html",'<form name="test"> <md-content class="md-whiteframe-z2" layout-padding> <div> <h2 class="md-title">Demo For Date Range Picker</h2> <div layout="row"> <sm-range-picker-input fname="Date of Pay" lable="Date of Pay" form="test" min-date="11-10-2015" value="vm.employee.dateOfPay" flex="50" is-required="{{true}}" format="MM-DD-YYYY" divider=":" mode="date-time" week-start-day="Sunday"> </sm-range-picker-input> </div> </div> </md-content> </form>'),a.put("views/time-picker-api.html",'<md-content class="md-whiteframe-z2" layout-padding> <div> Attributes Details </div> <div> <table> <thead> <tr> <th>Attribute</th> <th>Value</th> <th>Desription</th> </tr> </thead> <tbody> <tr> <td>fname</td> <td>Field name</td> <td>Field Name</td> </tr> <tr> <td>lable</td> <td>Lable for field</td> <td>Lable for field</td> </tr> <tr> <td>form</td> <td>form control name</td> <td>form control name</td> </tr> <tr> <td>value</td> <td>ng-Model</td> <td>ng-Model value here</td> </tr> <tr> <td>flex-size</td> <td>Flex size to setup</td> <td>Flex size to setup</td> </tr> <tr> <td>format</td> <td>date format</td> <td>Moment Js accepted date format</td> </tr> <tr> <td>mode</td> <td>Date picker or Date Time picker mode</td> <td>if DateTime Mode put \'date-time\' else keep blank</td> </tr> <tr> <td>is-required</td> <td>is field is required</td> <td>True or false</td> </tr> </tbody> </table> </div> <div> Support Swipe left and right for date movement. </div> <div> <code> <p> &lt;sm-date-time-picker &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fname="Time Logged In" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;lable="loginTime" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;form="empForm"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;value="vm.employee.logintime"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;flex="100" &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;is-required="true"  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;format="HH:mm" &gt; &lt;/sm-date-time-picker&gt;  </p> </code> </div> <div> Need your feedback. </div> </md-content>'),a.put("views/time-picker-demo.html",'<form name="empForm"> <md-content class="md-whiteframe-z2" layout-padding> <div layout="row"> View 12 Hour Mode Time </div> <div layout="row"> <sm-time-picker-new fname="Date of Pay" lable="Date of Pay" form="empForm" value="vm.employee.timeselect12" flex-size="50" mode="time" is-required="true" format="hh:mm a"> </sm-time-picker-new> </div> <div layout="row"> View 24 Hour Mode Time </div> <div layout="row"> <sm-time-picker-new fname="Date of Pay" lable="Date of Pay" form="empForm" value="vm.employee.timeselect24" flex-size="50" mode="time" is-required="true" format="HH:mm"> </sm-time-picker-new> </div> </md-content> </form>'),a.put("views/timepicker.html","<sm-time-picker></sm-time-picker>")}]);